<?php

/**
 * @file
 * UIkit Components.
 *
 * Companion module to the UIkit base theme to provide additional components and
 * functionality.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function uikit_components_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.uikit_components':
      return t('
        <h3>About</h3>
        <p>The UIkit components module provides additional components and functionality to the UIkit base theme. Some aspects of the frontend cannot be themed without going through the backend, such as empty navbar links. With this module we can add more functionality to the UIkit frontend through the Drupal backend without the need for contributed modules which may add more functionality than needed.</p>
        <h3>Uses</h3>
        <dl>
        <dt>Navbar special menu items</dt>
        <dd>
        <p>When working with menus, UIkit navbars can contain special menu items such as headers, dividers and parent items with no path. Users with the <em>Administer menus and menu items</em> permission can create these special menu items by entering the corresponding text in the <em>Path</em> field when adding/editing links from the <a href="/admin/structure/menu">Menus</a> administration page.</p>
        <p>Enter one of the following (including &lt; and &gt;) in the <em>Path</em> field to use the special menu item:</p>
        <ul>
        <li><em>/&lt;uk-nav-header&gt;</em>: Creates a menu item as a header</li>
        <li><em>/&lt;uk-nav-divider&gt;</em>: Creates a menu item as a separator</li>
        <li><em>/&lt;uk-parent&gt;</em>: Creates a parent menu item with no path to follow when clicked</li>
        </ul>
        </dd>
        </dl>
      ');
  }
}

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 */
function uikit_components_form_menu_link_content_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $menu_link = $form_state->getFormObject()->getEntity();
  $menu_link_options = $menu_link->link->first()->options ?: [];

  $form['menu_item_type'] = array(
    '#type'          => 'select',
    '#title'         => t('Menu item type'),
    '#default_value' => !empty($menu_link_options['menu_item_type']) ? $menu_link_options['menu_item_type'] : 0,
    '#options' => [
      0 => t('Normal menu item'),
      'nav_header' => t('Navigation header'),
      'nav_divider' => t('Navigation divider'),
    ],
    '#description' => t('Select the type of menu item this is. <em class="placeholder">Navigation header</em> and <em class="placeholder">Navigation divider</em> are special menu items from the <a href="@navbar" target="_blank">UIkit navbar component</a>.', array(
      '@navbar' => 'https://getuikit.com/v2/docs/navbar.html',
    )),
  );

  $form['actions']['submit']['#submit'][] = 'uikit_components_menu_link_content_form_submit';
}

/**
 * Process handler for the menu link content form.
 *
 * @param array $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 */
function uikit_components_menu_link_content_form_submit($form, FormStateInterface $form_state) {
  $menu_item_type = $form_state->getValue('menu_item_type');
  $type = empty($menu_item_type) ? 'normal_menu_item' : $menu_item_type;

  $options = [
    'menu_item_type' => $type,
  ];

  $menu_link = $form_state->getFormObject()->getEntity();
  $menu_link_options = $menu_link->link->first()->options;

  $merged = array_merge($menu_link_options, $options);

  $menu_link->link->first()->options = $merged;
  $menu_link->save();
}

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 */
function uikit_components_form_block_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $block = $form_state->getFormObject()->getEntity();
  $region = $block->getRegion();

  if ($region == 'navbar') {
    // Add navbar alignment setting to navbar blocks.
    $form['navbar_alignment'] = array(
      '#type' => 'select',
      '#title' => t('Navbar alignment'),
      '#default_value' => $block->getThirdPartySetting('uikit_components', 'navbar_alignment'),
      '#options' => [
        0 => t('Left'),
        1 => t('Right'),
      ],
      '#description' => t('Select the alignment of this menu in the navbar region.'),
      '#weight' => 0,
    );

    // Add a form entity builder.
    $form['#entity_builders'][] = 'uikit_components_form_block_form_builder';
  }
}

/**
 * Entity builder for the block configuration entity.
 */
function uikit_components_form_block_form_builder($entity_type, Drupal\block\Entity\Block $block, &$form, \Drupal\Core\Form\FormStateInterface $form_state) {
  if ($form_state->getValue('navbar_alignment')) {
    $block->setThirdPartySetting('uikit_components', 'navbar_alignment', $form_state->getValue('navbar_alignment'));
    return;
  }

  $block->unsetThirdPartySetting('uikit_components', 'navbar_alignment');
}
